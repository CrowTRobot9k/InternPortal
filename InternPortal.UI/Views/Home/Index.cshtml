@model InternPortal.UI.ViewModels.HomePageViewModel

@{
    ViewBag.Title = "Home Page";
    ViewBag.Decription = "";
}

<div class="container-fluid">
    @if (!User.IsInRole("admin"))
    {
        <div class="text-center">
            <h2>Welcome to Intern Portal</h2>
        </div>
        <hr>
        if (Model.User == null || Model.User.Applications.FirstOrDefault(i => i.ApplicationCompleteDate == null) == null)
        {
            <div class="row">
                <div class="text-center">
                    <div class="form-group">
                        <label for="exampleInputPassword1">Start Application:</label>
                        @Html.ActionLink("Start", "Application", "Application", null, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="text-center">
                    <div class="form-group">
                        <label for="exampleInputPassword1">Continue Application:</label>
                        @Html.ActionLink("Continue", "Application", "Application", null, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="text-center">
            <h2>Submitted Applications</h2>
        </div>
        <hr>
        //Admin Grid
        <div>
            <div id="ApplicationGrid"></div>

            <script type="text/x-kendo-template" id="ApplicationTemplate">
                <div class="tabstrip">
                    <ul>
                        <li id="ApplicationProfileTab" class="k-state-active">
                            Profile
                        </li>
                        <li id="ApplicationQuestionsTab">
                            Questions
                        </li>
                        <li id="ApplicationUploadsTab">
                            Uploads
                        </li>
                    </ul>
                    <div>
                        <div class='ApplicationProfile col-lg-12 col-md-12'>
                            <label>Name </label> #: User.FirstName # #: User.LastName #
                            <br>
                            <label>Email </label> #: checkNull(User.Email) #
                            <br>
                            <label>Phone: </label>#: checkNull(User.PhoneNumber) #
                            <br>
                            <label>Address:</label><address>
                                #: checkNull(User.Address) #<br />
                                #: checkNull(User.City) #, #: checkNull(User.State) #, #: checkNull(User.ZipCode) #
                            </address>
                            <label>DOB: </label> #: formatDate(User.DateOfBirth) #
                            <br><label>Gender: </label> #: checkNull(User.Gender) #
                            <br>
                            <label>Ethnicity: </label> #: checkNull(User.Ethnicity) #
                        </div>
                    </div>
                    <div>
                        <div class="ApplicationQuestions"></div>
                    </div>
                    <div>
                        <div class="ApplicationUploads col-lg-12 col-md-12">
                            <label>Title: </label> #: UserUploads[0].UploadTitle #
                            <br>
                            <label>Description: </label> #: UserUploads[0].UploadDescription #
                            <form method="get" action="/Home/Downloadfile/#: UserUploads[0].UploadId #">
                                <button type="submit" class="k-button k-primary">Download</button>
                            </form>
                        </div>
                    </div>
                </div>
            </script>
        </div>
    }
</div>

<script>
    function formatDate(data) {
        return kendo.toString(kendo.parseDate(data), "yyyy-MM-dd") || "N/A";
    }

    function formatDateTime(data) {
        return kendo.toString(kendo.parseDate(data), "yyyy-MM-dd hh:mm") || "N/A";
    }
    function checkNull(data) {
        return data || "N/A";
    }

    var applicationDs = new kendo.data.DataSource({
        transport: {
            type: "odata",
            read: "/API/InternService/GetApplications",
            schema:
                {
                    model:
                        {
                            fields:
                                {
                                    ApplicationId: { type: "number" }
                                }
                        }
                }

        },
        pageSize: 10
    });

    $('#ApplicationGrid').kendoGrid({
        dataSource: applicationDs,
        pageable: true,
        sortable: true,
        filterable: true,
        toolbar: ["excel"],
        excel: {
            fileName: "Applications.xlsx",
            allPages: true,
            filterable: true
        }
        ,
        detailTemplate: kendo.template($("#ApplicationTemplate").html()),
        detailInit: detailInit,
        columns: [
            {
                headerAttributes: { "class": "column-header" },
                title: "Application Id",
                field: "ApplicationId",
                type: "number",
                filterable: {
                    extra: false,
                    multi: false,
                    operators: {
                        number: {
                            eq: "Equal to",
                            neq: "Not equal to"
                        }
                    }
                }
            },
            {
                headerAttributes: { "class": "column-header" },
                title: "First Name",
                field: "User.FirstName",
                type: "string",
                filterable: {
                    extra: false,
                    multi: false,
                    operators: {
                        number: {
                            eq: "Equal to",
                            neq: "Not equal to"
                        }
                    }
                }
            },
            {
                headerAttributes: { "class": "column-header" },
                title: "Last Name",
                field: "User.LastName",
                type: "string",
                filterable: {
                    extra: false,
                    multi: false,
                    operators: {
                        number: {
                            eq: "Equal to",
                            neq: "Not equal to"
                        }
                    }
                }
            },
            {
                headerAttributes: { "class": "column-header" },
                title: "Start Date",
                field: "ApplicationStartDate",
                template: '#= formatDate(ApplicationStartDate) #',
                filterable: true
            },
            {
                headerAttributes: { "class": "column-header" },
                title: "End Date",
                field: "ApplicationCompleteDate",
                template: '#= formatDate(ApplicationCompleteDate) #',
                filterable: true
            },
            {
                headerAttributes: { "class": "column-header" }, field: "ApplicationStatu.Status", title: "Status",
                attributes: { class: "#= ApplicationStatu.Status #" },
                filterable: {
                    extra: false,
                    multi: true
                }
            },
        ]
    });

    function detailInit(e) {
        var detailRow = e.detailRow;

        var uri = "/API/InternService/GetApplicationAnswers/" + e.data.ApplicationId;

        detailRow.find(".tabstrip").kendoTabStrip({
            animation: {
                open: { effects: "fadeIn" }
            }
        });

        window.record = 0;
        detailRow.find(".ApplicationQuestions").kendoGrid({
            dataSource: {
                transport: { read: { url: uri } }
                //,
                ///schema: { data: "OrderItem" }
            },
            columns: [
                {
                    title: "#",
                    template: "#= ++window.record #",
                    width: 40
                },
                { field: "QuestionId", title: "QuestionId", hidden: true },
                { field: "Question", title: "Question" },
                { field: "Answer", title: "Answer" }
            ],
            pageable: false,
            dataBinding: function () {
                window.record = 0;
            }
        });

    }
</script>